generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMINISTRADOR
  CAJERO
  ASEO
  REGISTRO_FORMULARIO
}

model Usuario {
  id       Int    @id @default(autoincrement())
  nombre   String
  rol      Role   @default(CAJERO)
  password String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleted   Boolean  @default(false)

  @@index([deleted])
}

enum TipoDocumento {
  CC
  CE
  TI
  PASAPORTE
  PEP
  DNI
  PPT
}

enum Genero {
  MASCULINO
  FEMENINO
  OTRO
}

model Huesped {
  id                      Int           @id @default(autoincrement())
  tipo_documento          TipoDocumento
  numero_documento        String        @unique
  primer_apellido         String
  segundo_apellido        String?
  nombres                 String
  pais_residencia         String
  ciudad_residencia       String
  pais_procedencia String
  ciudad_procedencia String
  lugar_nacimiento        String
  fecha_nacimiento        DateTime
  nacionalidad            String
  ocupacion               String
  genero                  Genero
  telefono                String?
  correo                  String?

  reservas              Reserva[]
  huespedes_secundarios HuespedSecundario[]
  documentos_subidos    Documento[]
  facturas              Factura[]

  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  deleted    Boolean      @default(false)
  Formulario Formulario[]

  @@index([numero_documento])
  @@index([deleted])
}

model HuespedSecundario {
  id                      Int           @id @default(autoincrement())
  tipo_documento          TipoDocumento
  numero_documento        String        @unique
  primer_apellido         String
  segundo_apellido        String?
  nombres                 String
  pais_residencia         String
  ciudad_residencia       String
  pais_procedencia String
  ciudad_procedencia      String
  fecha_nacimiento        DateTime
  nacionalidad            String
  ocupacion               String
  genero                  Genero
  telefono                String?
  correo                  String?
  huespedId               Int?
  huesped                 Huesped?      @relation(fields: [huespedId], references: [id])
  Reserva                 Reserva[]
  documentos_subidos      Documento[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleted   Boolean  @default(false)

  @@index([numero_documento])
  @@index([deleted])
}

model Documento {
  id                  Int    @id @default(autoincrement())
  url                 String
  nombre              String
  huespedId           Int?
  huespedSecundarioId Int?

  huesped           Huesped?           @relation(fields: [huespedId], references: [id])
  huespedSecundario HuespedSecundario? @relation(fields: [huespedSecundarioId], references: [id])

  createdAt DateTime @default(now())

  @@index([huespedId])
  @@index([huespedSecundarioId])
}

enum EstadosReserva {
  RESERVADO
  CANCELADO
  FINALIZADO
  PENDIENTE
}

enum MotivosViajes {
  NEGOCIOS_Y_MOTIVOS_PROFESIONALES
  VACACIONES_RECREO_Y_OCIO
  VISITAS_A_FAMILIARES_Y_AMIGOS
  EDUCACION_Y_FORMACION
  SALUD_Y_ATENCION_MEDICA
  RELIGION_Y_PEREGRINACIONES
  COMPRAS
  TRANSITO
  OTROS_MOTIVOS
}

model Reserva {
  id                       Int                 @id @default(autoincrement())
  fecha_inicio             DateTime
  fecha_fin                DateTime
  estado                   EstadosReserva
  pais_procedencia         String
  ciudad_procedencia       String
  pais_destino             String
  motivo_viaje             MotivosViajes
  check_in                 DateTime
  check_out                DateTime
  costo                    Float
  numero_acompaniantes     Int
  habitacionId             Int
  huespedId                Int
  huespedes_secundarios    HuespedSecundario[]
  facturaId                Int?                @unique

  huesped    Huesped    @relation(fields: [huespedId], references: [id])
  habitacion Habitacion @relation(fields: [habitacionId], references: [id])
  factura    Factura?   @relation(fields: [facturaId], references: [id])

  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  deleted    Boolean      @default(false)
  Formulario Formulario[]

  @@index([huespedId])
  @@index([deleted])
}

enum TiposHabitacion {
  APARTAMENTO
  HAMACA
  CAMPING
  MÃšLTIPLE
  CASA
  FINCA
  CAMA
  PLAZA
  SENCILLA
  SUITE
  DOBLE
  OTRO
}

enum EstadosHabitacion {
  LIBRE
  OCUPADO
  RESERVADO
  EN_DESINFECCION
  EN_MANTENIMIENTO
  EN_LIMPIEZA
}

model Habitacion {
  id                Int               @id @default(autoincrement())
  numero_habitacion Int               
  tipo              TiposHabitacion
  estado            EstadosHabitacion
  precio_por_noche  Float
  reservas          Reserva[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleted   Boolean  @default(false)

  @@index([deleted])
}

model Factura {
  id            Int      @id @default(autoincrement())
  total         Float
  fecha_factura DateTime
  huespedId     Int

  reserva Reserva?
  huesped Huesped  @relation(fields: [huespedId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleted   Boolean  @default(false)

  @@index([deleted])
}

model LinkFormulario {
  id           Int      @id @default(autoincrement())
  url          String
  completado   Boolean  @default(false)
  expirado     Boolean  @default(false)
  vencimiento  DateTime
  formularioId Int?     @unique
  numeroHabitacion Int
  fechaInicio      DateTime
  fechaFin         DateTime
  costo            Float

  formulario Formulario? @relation(fields: [formularioId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleted   Boolean  @default(false)

  @@index([deleted])
}

model Formulario {
  id               Int      @id @default(autoincrement())
  huespedId        Int
  reservaId        Int
  SubidoATra       Boolean  @default(false)
  traId            Int?
  SubidoASire      Boolean  @default(false)

  LinkFormulario LinkFormulario?
  Huesped        Huesped         @relation(fields: [huespedId], references: [id])
  Reserva        Reserva         @relation(fields: [reservaId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleted   Boolean  @default(false)

  @@index([deleted])
}

model TokenBlacklist {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([token])
}
